# compile from latest commits

name: 24.10-mtk-feeds-bpi-r4

on:
  workflow_dispatch:
    inputs:
      openwrt_commit:
        description: "OpenWrt Commit to Use"
        required: true
        default: "HEAD"
      mtk_commit:
        description: "MTK Feeds Commit to Use"
        required: true
        default: "HEAD"
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-24.04
    
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget -y

      # https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/+/refs/heads/master/autobuild/unified/
      - name: Checkout openwrt
        run: |
          sudo git clone --branch openwrt-24.10 https://github.com/openwrt/openwrt.git /mnt/openwrt
          cd /mnt/openwrt
          sudo git checkout ${{ env.openwrt_commit }}

      # external build
      - name: Clone mtk-openwrt-feeds
        run: |
          sudo git clone --branch master https://git01.mediatek.com/openwrt/feeds/mtk-openwrt-feeds /mnt/mtk-openwrt
          cd /mnt/mtk-openwrt
          sudo git checkout ${{ env.mtk_commit }}

      - name: Prepare
        run: |
          cd /mnt/openwrt
          sudo bash ../mtk-openwrt/autobuild/unified/autobuild.sh filogic-mac80211-bpi-r4 prepare log_file=make

      - name: Build
        run: |
          cd /mnt/openwrt
          sudo make -j`nproc` V=sc download world

      - name: Tar output
        run: sudo tar -czvf mtk-openwrt-24.10.tar.gz /mnt/openwrt/bin/targets/mediatek/filogic

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mtk-openwrt-24.10
          path: mtk-openwrt-24.10.tar.gz

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.target }}
          release_name: "Nightly ${{ env.RELEASE_DATE }}"
          draft: false
          prerelease: true

      - name: Upload artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mtk-openwrt-24.10.tar.gz
          asset_name: mtk-openwrt-24.10.tar.gz
          asset_content_type: application/gzip
          
