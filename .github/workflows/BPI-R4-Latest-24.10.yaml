# compile from latest commits

name: BPI-R4-Latest-24.10

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-24.04
    
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget -y

  checkout_and_build:
    needs: setup
    runs-on: ubuntu-24.04
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/+/refs/heads/master/autobuild/unified/
      - name: Checkout openwrt
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: openwrt-24.10
          path: openwrt
          
      - name: Clone mtk-openwrt-feeds
        run: git clone --branch master https://git01.mediatek.com/openwrt/feeds/mtk-openwrt-feeds

      - name: Prepare for building
        run: |
          cd openwrt
          bash ../mtk-openwrt-feeds/autobuild/unified/autobuild.sh filogic-mac80211-bpi-r4 prepare log_file=make

      - name: Apply config patch
        run: |
          cd openwrt
          ../config-patch.sh

      - name: Build
        run: |
          cd openwrt
          make -j$1 V=s download world

      - name: Tar output
        run: tar -czvf BPI-R4-openwrt-24.10.tar openwrt/bin/targets/mediatek/filogic

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: BPI-R4-openwrt-24.10
          path: BPI-R4-openwrt-24.10.tar

      - name: Set tag name
        id: tag
        run: |
          TAG_NAME="nightly-${{ env.RELEASE_DATE }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Nightly ${{ env.RELEASE_DATE }}"
          draft: false
          prerelease: true

      - name: Upload artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: openwrt/bin/targets/mediatek/filogic
          asset_name: BPI-R4-openwrt-24.10.zip
          asset_content_type: application/zip
          
